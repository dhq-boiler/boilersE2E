# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - refs/tags/v*

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotNetFrameworks: 'net7.0'
  dotNetVersion: '7.0.x'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET 6 framework'
  inputs:
    version: '6.0.x'
    includePreviewVersions: true

- task: UseDotNet@2
  displayName: 'Use .NET 7 framework'
  inputs:
    version: $(dotNetVersion)
    includePreviewVersions: true
    
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    arguments: '--configuration $(BuildConfiguration)'

- task: Windows Application Driver@0
  inputs:
    OperationType: 'Start'
    AgentResolution: '1080p'

#- task: DotNetCoreCLI@2
#  displayName: 'dotnet test'
#  inputs:
#    command: 'test'
#    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura -- RunConfiguration.DisableAppDomain=true'
#    publishTestResults: true
#    projects: |
#      boilersE2E.xUnit.Test
#      boilersE2E.NUnit.Test
#      boilersE2E.MsTest.Test

- task: Windows Application Driver@0
  condition: always()
  inputs:
    OperationType: 'Stop'

- powershell: 'echo "##vso[task.setvariable variable=PackageVersion]$($env:Build_SourceBranchName.Substring(1))"'
  displayName: 'PowerShell Script'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  
- task: CmdLine@2
  displayName: 'tree $(Build.ArtifactStagingDirectory) /F'
  inputs:
    script: 'tree $(Build.ArtifactStagingDirectory) /F'
    
- task: CmdLine@2
  displayName: more boilersE2E.Core.nuspec
  inputs:
    script: 'more $(Build.SourcesDirectory)\boilersE2E.Core\boilersE2E.Core.nuspec'
- task: CmdLine@2
  displayName: more boilersE2E.MsTest.nuspec
  inputs:
    script: 'more $(Build.SourcesDirectory)\boilersE2E.MsTest\boilersE2E.MsTest.nuspec'
- task: CmdLine@2
  displayName: more boilersE2E.NUnit.nuspec
  inputs:
    script: 'more $(Build.SourcesDirectory)\boilersE2E.NUnit\boilersE2E.NUnit.nuspec'
- task: CmdLine@2
  displayName: more boilersE2E.xUnit.nuspec
  inputs:
    script: 'more $(Build.SourcesDirectory)\boilersE2E.xUnit\boilersE2E.xUnit.nuspec'

- task: NugetVersionSynchronizer@0
  inputs:
    dropFolderPath: '$(Build.SourcesDirectory)'
    nuspecFileName: 'boilersE2E.Core/boilersE2E.Core.nuspec'
    modelVersionFileName: '$(Build.SourcesDirectory)/boilersE2E.Core/bin/$(BuildConfiguration)/net7.0-windows10.0.22000.0/boilersE2E.Core.dll'

- task: NugetVersionSynchronizer@0
  inputs:
    dropFolderPath: '$(Build.SourcesDirectory)'
    nuspecFileName: 'boilersE2E.MsTest/boilersE2E.MsTest.nuspec'
    modelVersionFileName: '$(Build.SourcesDirectory)/boilersE2E.MsTest/bin/$(BuildConfiguration)/net7.0-windows10.0.22000.0/boilersE2E.MsTest.dll'

- task: NugetVersionSynchronizer@0
  inputs:
    dropFolderPath: '$(Build.SourcesDirectory)'
    nuspecFileName: 'boilersE2E.NUnit/boilersE2E.NUnit.nuspec'
    modelVersionFileName: '$(Build.SourcesDirectory)/boilersE2E.NUnit/bin/$(BuildConfiguration)/net7.0-windows10.0.22000.0/boilersE2E.NUnit.dll'

- task: NugetVersionSynchronizer@0
  inputs:
    dropFolderPath: '$(Build.SourcesDirectory)'
    nuspecFileName: 'boilersE2E.xUnit/boilersE2E.xUnit.nuspec'
    modelVersionFileName: '$(Build.SourcesDirectory)/boilersE2E.xUnit/bin/$(BuildConfiguration)/net7.0-windows10.0.22000.0/boilersE2E.xUnit.dll'

- task: CmdLine@2
  displayName: more boilersE2E.Core.nuspec
  inputs:
    script: 'more $(Build.SourcesDirectory)\boilersE2E.Core\boilersE2E.Core.nuspec'
- task: CmdLine@2
  displayName: more boilersE2E.MsTest.nuspec
  inputs:
    script: 'more $(Build.SourcesDirectory)\boilersE2E.MsTest\boilersE2E.MsTest.nuspec'
- task: CmdLine@2
  displayName: more boilersE2E.NUnit.nuspec
  inputs:
    script: 'more $(Build.SourcesDirectory)\boilersE2E.NUnit\boilersE2E.NUnit.nuspec'
- task: CmdLine@2
  displayName: more boilersE2E.xUnit.nuspec
  inputs:
    script: 'more $(Build.SourcesDirectory)\boilersE2E.xUnit\boilersE2E.xUnit.nuspec'
    
- task: DotNetCoreCLI@2
  displayName: 'pack boilersE2E.Core'
  inputs:
    command: custom
    custom: pack
    arguments: '-p:NuspecFile=boilersE2E.Core.nuspec --output $(Build.ArtifactStagingDirectory) --no-build --include-symbols --include-source /p:Configuration=Release --verbosity Detailed'
    projects: '$(Build.SourcesDirectory)/boilersE2E.Core/boilersE2E.Core.csproj'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- task: DotNetCoreCLI@2
  displayName: 'pack boilersE2E.MsTest'
  inputs:
    command: custom
    custom: pack
    arguments: '-p:NuspecFile=boilersE2E.MsTest.nuspec --output $(Build.ArtifactStagingDirectory) --no-build --include-symbols --include-source /p:Configuration=Release --verbosity Detailed'
    projects: '$(Build.SourcesDirectory)/boilersE2E.MsTest/boilersE2E.MsTest.csproj'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- task: DotNetCoreCLI@2
  displayName: 'pack boilersE2E.NUnit'
  inputs:
    command: custom
    custom: pack
    arguments: '-p:NuspecFile=boilersE2E.NUnit.nuspec --output $(Build.ArtifactStagingDirectory) --no-build --include-symbols --include-source /p:Configuration=Release --verbosity Detailed'
    projects: '$(Build.SourcesDirectory)/boilersE2E.NUnit/boilersE2E.NUnit.csproj'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- task: DotNetCoreCLI@2
  displayName: 'pack boilersE2E.xUnit'
  inputs:
    command: custom
    custom: pack
    arguments: '-p:NuspecFile=boilersE2E.xUnit.nuspec --output $(Build.ArtifactStagingDirectory) --no-build --include-symbols --include-source /p:Configuration=Release --verbosity Detailed'
    projects: '$(Build.SourcesDirectory)/boilersE2E.xUnit/boilersE2E.xUnit.csproj'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  
- task: NuGetCommand@2
  displayName: 'push nupkg'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'boilersE2E-NuGet'

#- task: NuGetCommand@2
#  displayName: 'push snupkg'
#  inputs:
#    command: 'push'
#    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.snupkg'
#    nuGetFeedType: external
#    publishFeedCredentials: 'boilersE2E-NuGet'
#    allowPackageConflicts: true

- script: nuget push $(Build.ArtifactStagingDirectory)/**/*.snupkg -Source https://api.nuget.org/v3/index.json -ApiKey $(nuget.apikey) -SkipDuplicate
  displayName: 'push snupkg'